{
  "id": "f2b1ec7d-bc54-4cc8-b9ed-1bc7f37c9dc6",
  "name": "run-cmake",
  "friendlyName": "Run CMake",
  "description": "Run CMake (and optionally vcpkg and Ninja) with a CMakeLists.txt or with CMakeSettings.json created with Visual Studio",
  "helpMarkDown": "[More information](https://github.com/lukka/CppBuildTasks/blob/master/README.md)",
  "category": "Build",
  "visibility": [
    "Build",
    "Release"
  ],
  "author": "Luca Cappa",
  "demands": [
    "cmake"
  ],
  "version": {
    "Major": 0,
    "Minor": 2,
    "Patch": 36
  },
  "preview": false,
  "minimumAgentVersion": "1.91.0",
  "instanceNameFormat": "Run CMake",
  "groups": [
    {
      "name": "advanced",
      "displayName": "Advanced",
      "isExpanded": false
    }
  ],
  "inputs": [
    {
      "name": "cmakeListsOrSettingsJson",
      "type": "pickList",
      "label": "Mode:",
      "defaultValue": "CMakeListsTxtBasic",
      "helpMarkDown": "Select between targeting a CMakeLists.txt, or leveraging a CMakeSettings.json file of Visual Studio.",
      "options": {
        "CMakeListsTxtBasic": "Using a CMakeLists.txt - Basic configuration",
        "CMakeListsTxtAdvanced": "Using a CMakeLists.txt - Advanced configuration",
        "CMakeSettingsJson": "Using a CMakeSettings.json"
      },
      "required": "true"
    },
    {
      "name": "cmakeListsTxtPath",
      "type": "filePath",
      "label": "Path to CMakeLists.txt:",
      "defaultValue": "$(Build.SourcesDirectory)/CMakeLists.txt",
      "required": false,
      "helpMarkDown": "Path to CMakeLists.txt",
      "visibleRule": "cmakeListsOrSettingsJson != CMakeSettingsJson"
    },
    {
      "name": "cmakeSettingsJsonPath",
      "type": "filePath",
      "label": "Path to CMakeSettings.json:",
      "defaultValue": "$(Build.SourcesDirectory)/CMakeSettings.json",
      "required": false,
      "helpMarkDown": "Path to CMakeSettings.json",
      "visibleRule": "cmakeListsOrSettingsJson = CMakeSettingsJson"
    },
    {
      "name": "cmakeToolchainPath",
      "type": "filePath",
      "label": "Path to a toolchain file:",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Path to toolchain .cmake file.",
      "visibleRule": "cmakeListsOrSettingsJson = CMakeListsTxtBasic"
    },
    {
      "name": "useVcpkgToolchainFile",
      "type": "boolean",
      "label": "Use vcpkg.cmake toolchain if the RUNVCPKG_VCPKG_ROOT environment variable is defined.",
      "defaultValue": "false",
      "required": false,
      "helpMarkDown": "Indicates whether to use vcpkg's CMake toolchain file if RUNVCPKG_VCPKG_ROOT environment variable is defined. If there is already a toolchain.cmake file passed in, that will be passed in with '-DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=/path/to/toolchain.cmake'."
    },
    {
      "name": "vcpkgTriplet",
      "type": "string",
      "label": "vcpkg triplet:",
      "defaultValue": "$(RUNVCPKG_VCPKG_TRIPLET)",
      "required": false,
      "helpMarkDown": "Specify the triplet used with vcpkg. The task 'Run vcpkg' sets the default one in RUNVCPKG_VCPKG_TRIPLET environment variable. Possible values are any file name with no extension present in the vcpkgroot/trplet directory, e.g. x64-linux, x64-windows, x64-osx and so forth.",
      "visibleRule": "useVcpkgToolchainFile = true"
    },
    {
      "name": "cmakeBuildType",
      "type": "string",
      "label": "CMake Build type:",
      "defaultValue": "Debug",
      "required": false,
      "helpMarkDown": "Select the build configuration, typically Debug or Release.",
      "visibleRule": "cmakeListsOrSettingsJson = CMakeListsTxtBasic"
    },
    {
      "name": "cmakeGenerator",
      "type": "pickList",
      "label": "Generator:",
      "defaultValue": "Ninja",
      "helpMarkDown": "Specify the CMake generator to be used.",
      "options": {
        "Ninja": "Ninja",
        "UnixMakefiles": "Unix Makefiles",
        "VS16Win64": "Visual Studio 2019 x64",
        "VS16Arm64": "Visual Studio 2019 ARM64",
        "VS16Arm": "Visual Studio 2019 ARM",
        "VS16Win32": "Visual Studio 2019 Win32",
        "VS15Arm64": "Visual Studio 2017 x64",
        "VS15Win64": "Visual Studio 2017 ARM64",
        "VS15Arm": "Visual Studio 2017 ARM",
        "VS15Win32": "Visual Studio 2017 Win32"
      },
      "required": "true",
      "visibleRule": "cmakeListsOrSettingsJson = CMakeListsTxtBasic"
    },
    {
      "name": "buildDirectory",
      "type": "string",
      "label": "Build directory",
      "defaultValue": "$(Build.ArtifactStagingDirectory)",
      "required": false,
      "helpMarkDown": "Set the build directory, i.e. where CMake generates the build system files. Defaults to `$(Build.ArtifactStagingDirectory)` for CMakeLists.txt, and to `$(Build.ArtifactStagingDirectory)/{name}` for CMakeSettings.json."
    },
    {
      "name": "cmakeAppendedArgs",
      "type": "multiLine",
      "label": "CMake arguments:",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Provides a mean to provide all the CMake arguments. This is required when using CMakeLists.txt in Advanced mode. For CMakeSettings.json, the arguments are already inferred, but you can append your arguments providing them here.",
      "visibleRule": "cmakeListsOrSettingsJson != CMakeListsTxtBasic",
      "properties": {
        "resizable": "true",
        "rows": "5"
      }
    },
    {
      "name": "configurationRegexFilter",
      "type": "string",
      "label": "Configuration(s) regex filter:",
      "defaultValue": ".*",
      "required": true,
      "helpMarkDown": "The regular expression selects which CMakeSettings.json's configuration(s) to build, one or more.",
      "visibleRule": "cmakeListsOrSettingsJson = CMakeSettingsJson"
    },
    {
      "name": "ninjaPath",
      "type": "filepath",
      "label": "Ninja path:",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Full path to ninja build tool. If not specified, the one in PATH environment variable will be used. If not available, it will be downloaded from Internet.",
      "groupname": "advanced"
    },
    {
      "name": "ninjaDownloadUrl",
      "type": "string",
      "label": "Ninja download URL:",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "URL to download ninja build tool from.",
      "groupname": "advanced"
    },
    {
      "name": "cmakeWrapperCommand",
      "type": "string",
      "label": "CMake wrapper command (e.g. emcmake):",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The shell command that woud setup the environment and then invoke the cmake command. An example is 'emcmake' of Emscripten SDK.",
      "groupname": "advanced"
    },
    {
      "name": "buildWithCMake",
      "type": "boolean",
      "label": "Build after succesful CMake generation.",
      "defaultValue": "true",
      "required": false,
      "helpMarkDown": "Indicates whether to run 'cmake --build' after CMake project files have been generated successfully."
    },
    {
      "name": "buildWithCMakeArgs",
      "type": "string",
      "label": "Additional build args:",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Additional build arguments such '-j4', '--config Debug', '--clean-first' and so forth. Separate CMake argument to the native make program arguments with '--' .",
      "visibleRule": "buildWithCMake == true && cmakeListsOrSettingsJson != CMakeSettingsJson"
    }
  ],
  "execution": {
    "Node10": {
      "target": "cmake-task.js"
    }
  }
}