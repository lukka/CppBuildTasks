{
  "id": "d855c326-b1c0-4d6f-b1c7-440ade6835fb",
  "name": "run-vcpkg",
  "friendlyName": "Run vcpkg",
  "description": "Run vcpkg to build dependencies.",
  "helpMarkDown": "[More information](https://github.com/lukka/CppBuildTasks/blob/master/README.md)",
  "category": "Build",
  "visibility": [
    "Build",
    "Release"
  ],
  "author": "Luca Cappa",
  "version": {
    "Major": 0,
    "Minor": 2,
    "Patch": 36
  },
  "preview": false,
  "minimumAgentVersion": "1.91.0",
  "instanceNameFormat": "Run vcpkg",
  "groups": [
    {
      "name": "advanced",
      "displayName": "Advanced",
      "isExpanded": false
    }
  ],
  "inputs": [
    {
      "name": "vcpkgDirectory",
      "type": "path",
      "label": "The vcpkg's root directory:",
      "defaultValue": "$(Build.BinariesDirectory)/vcpkg",
      "required": false,
      "helpMarkDown": "Specify the vcpkg's root directory. If not specified, it defaults to $(Build.BinariesDirectory)/vcpkg/ . When vcpkg is a Git submodule, specify the full path to it (e.g. '$(Build.SourcesDirectory)/vcpkg/') ."
    },
    {
      "name": "vcpkgGitURL",
      "type": "string",
      "label": "vcpkg URL Git repository:",
      "defaultValue": "https://github.com/microsoft/vcpkg.git",
      "required": false,
      "helpMarkDown": "Specify the URL Git repository to download vcpkg from. Defaults to https://github.com/microsoft/vcpkg.git",
      "groupname": "advanced"
    },
    {
      "name": "vcpkgGitCommitId",
      "type": "string",
      "label": "vcpkg Git tag/ref:",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Specify the Git commit id that establish which version of vcpkg needs to be used. When using vcpkg as a Git submodule, this input is not needed as impicitly specified by the submodule. [More information](https://github.com/lukka/CppBuildTasks/blob/master/README.md)",
      "groupname": "advanced"
    },
    {
      "name": "vcpkgTriplet",
      "type": "string",
      "label": "The vcpkg triplet:",
      "defaultValue": "",
      "required": false,
      "groupname": "advanced",
      "helpMarkDown": "Specify the vcpkg triplet. Common values are x64-windows, x64-linux and x64-osx. It is recommended to specify the triplet in the response file provided in the arguments instead than here."
    },
    {
      "name": "vcpkgArguments",
      "type": "multiLine",
      "label": "Arguments for 'vcpkg install':",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Provides the arguments appended to 'vcpkg install'. It is recommended to use a response file to provide either the triplet and the list of ports to be installed. , e.g. `@$(Build.SourcesDirectory)/vcpkg_osx.txt`.",
      "properties": {
        "resizable": "true",
        "rows": "5"
      }
    },
    {
      "name": "vcpkgArtifactIgnoreEntries",
      "type": "multiLine",
      "properties": {
        "resizable": "true",
        "rows": "3"
      },
      "label": "The entries to write into .artifactignore file, located in the vcpkg's root:",
      "defaultValue": "!.git\nbuildtrees\npackages\ndownloads\n",
      "required": false,
      "groupname": "advanced",
      "helpMarkDown": "Specify entries to write into the .artifactignore file. This file specifies which directory to ignore or to include by the Cache task. For more info: https://docs.microsoft.com/en-us/azure/devops/artifacts/reference/artifactignore?view=azure-devops . The file is created or overwritten if already existing."
    },
    {
      "name": "cleanAfterBuild",
      "type": "boolean",
      "label": "Clean files after build:",
      "defaultValue": "true",
      "required": false,
      "helpMarkDown": "Append the argument '--clean-after-build' to vcpkgArgument input, to clean buildtrees, packages and downloads after building each port. Default is true."
    },
    {
      "name": "doNotUpdateVcpkg",
      "type": "boolean",
      "label": "Do not update the vcpkg directory:",
      "defaultValue": "false",
      "required": false,
      "helpMarkDown": "Avoid to update (launching git) the specified 'vcpkgDirectory'. This is useful when vcpkg is being checkout indipendently of the run-vcpkg task. Default is false."
    }
  ],
  "execution": {
    "Node10": {
      "target": "vcpkg-task.js"
    }
  },
  "outputVariables": [
    {
      "name": "RUNVCPKG_VCPKG_ROOT_OUT",
      "description": "After the execution of this task, this variable contains the path to the installation of vcpkg on the build server."
    },
    {
      "name": "RUNVCPKG_VCPKG_TRIPLET_OUT",
      "description": "After the execution of this task, this variable contains the triplet used when building the ports."
    }
  ]
}